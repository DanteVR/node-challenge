{"version":3,"sources":["utils/paths.ts","utils/env.ts","utils/urls.ts","utils/constants.ts","utils/history.ts","components/Sidebar/index.tsx","assets/images/icons/clock.svg","assets/images/icons/bell.svg","assets/images/icons/calendar.svg","assets/images/icons/smile.svg","hooks/redux/reduxHook.ts","hooks/redux/customerSelectorHook.ts","services/calls.ts","redux/slices/customer.ts","redux/actions/customer.ts","pages/DashboardPage/cards.tsx","pages/DashboardPage/extra/charts.ts","pages/DashboardPage/charts.tsx","pages/DashboardPage/extra/columns.tsx","pages/DashboardPage/customers.tsx","pages/DashboardPage/index.tsx","pages/routes.tsx","redux/reducer.ts","redux/store.ts","Root.tsx","reportWebVitals.ts","index.tsx"],"names":[],"mappings":"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","file":"static/js/main.159331e9.chunk.js","sourcesContent":["const PATH_INIT = '/';\nconst PATH_DASHBOARD = '/dashboard';\n\nexport default {\n  PATH_INIT,\n  PATH_DASHBOARD,\n};\n","const { REACT_APP_PATH_API } = process.env;\n\nexport default {\n  REACT_APP_PATH_API,\n};\n","const ROUTE_GET_CUSTOMERS = '/customers/list';\nconst ROUTE_GET_AVERAGE_AGES = '/customers/average_ages';\n\nexport default {\n  ROUTE_GET_CUSTOMERS,\n  ROUTE_GET_AVERAGE_AGES,\n};\n","const HEADER_FORM_DATA = {\n  'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n};\n\nconst HEADER_JSON = {\n  'Content-Type': 'application/json',\n};\n\n// Services\nconst PORT_LIST_SERVICE = 5003;\nconst PORT_AVERAGE_AGE_SERVICE = 5002;\n\nexport default {\n  HEADER_FORM_DATA,\n  HEADER_JSON,\n  PORT_LIST_SERVICE,\n  PORT_AVERAGE_AGE_SERVICE,\n};\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import React from 'react';\nimport { Layout } from 'antd';\nimport './index.less';\n\nexport interface SidebarProps {\n  children?: React.ReactNode;\n}\n\nconst { Content } = Layout;\n\nexport const Sidebar: React.FC<SidebarProps> = ({ children }: SidebarProps) => {\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Layout className=\"site-layout\">\n        <Content className=\"site-layout-content\">{children}</Content>\n      </Layout>\n    </Layout>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/clock.41e9ed34.svg\";","export default __webpack_public_path__ + \"static/media/bell.f3a9a893.svg\";","export default __webpack_public_path__ + \"static/media/calendar.f8906f8c.svg\";","export default __webpack_public_path__ + \"static/media/smile.f8b3a348.svg\";","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { RootState, AppDispatch } from '@redux';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@redux';\n\nexport const useCustomerSelectorHook = () =>\n  useSelector((state: RootState) => state.customer);\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { constants, urls, env } from '@utils';\nimport axios from 'axios';\n\nconst callGetCustomers = async () => {\n  return axios.get(\n    `${env.REACT_APP_PATH_API}:${constants.PORT_LIST_SERVICE}${urls.ROUTE_GET_CUSTOMERS}`\n  );\n};\n\nconst callGetAverageAges = async () => {\n  return axios.get(\n    `${env.REACT_APP_PATH_API}:${constants.PORT_AVERAGE_AGE_SERVICE}${urls.ROUTE_GET_AVERAGE_AGES}`\n  );\n};\n\nexport default {\n  callGetCustomers,\n  callGetAverageAges,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst customerSlice = createSlice({\n  name: 'customer',\n  initialState: {\n    getCustomers: {\n      loading: false,\n      error: null,\n      response: null,\n    },\n    getAverageAges: {\n      loading: false,\n      error: null,\n      response: null,\n    },\n  },\n  reducers: {\n    cleanByKey: (state, { payload }: PayloadAction<any>) => ({\n      ...state,\n      [payload.key]: {\n        loading: false,\n        error: null,\n        response: null,\n      },\n    }),\n    getCustomersStart: (state) => ({\n      ...state,\n      getCustomers: {\n        ...state.getCustomers,\n        loading: true,\n        error: null,\n        response: null,\n      },\n    }),\n    getCustomersSuccess: (state, { payload }: PayloadAction<any>) => ({\n      ...state,\n      getCustomers: {\n        ...state.getCustomers,\n        loading: false,\n        error: null,\n        response: payload.data,\n      },\n    }),\n    getCustomersFail: (state, { payload }: PayloadAction<any>) => ({\n      ...state,\n      getCustomers: {\n        ...state.getCustomers,\n        loading: false,\n        error: payload,\n        response: null,\n      },\n    }),\n    getAverageAgesStart: (state) => ({\n      ...state,\n      getAverageAges: {\n        ...state.getAverageAges,\n        loading: true,\n        error: null,\n        response: null,\n      },\n    }),\n    getAverageAgesSuccess: (state, { payload }: PayloadAction<any>) => ({\n      ...state,\n      getAverageAges: {\n        loading: false,\n        error: null,\n        response: payload.data,\n      },\n    }),\n    getAverageAgesFail: (state, { payload }: PayloadAction<any>) => ({\n      ...state,\n      getAverageAges: {\n        loading: false,\n        error: payload,\n        response: null,\n      },\n    }),\n  },\n});\n\nexport const {\n  cleanByKey,\n  getCustomersStart,\n  getCustomersSuccess,\n  getCustomersFail,\n  getAverageAgesStart,\n  getAverageAgesSuccess,\n  getAverageAgesFail,\n} = customerSlice.actions;\n\nexport { customerSlice };\n\nexport default customerSlice.reducer;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { calls } from '@services';\nimport * as customerSlice from '../slices/customer';\n\nexport const getCustomers = () => async (dispatch: any) => {\n  dispatch(customerSlice.getCustomersStart());\n  try {\n    const response = await calls.callGetCustomers();\n    dispatch(\n      customerSlice.getCustomersSuccess({\n        data: {\n          status: true,\n          results: response.data,\n        },\n      })\n    );\n  } catch (error) {\n    dispatch(customerSlice.getCustomersFail({ error }));\n    dispatch(customerSlice.cleanByKey({ key: 'getCustomers' }));\n  }\n};\n\nexport const getAverageAges = () => async (dispatch: any) => {\n  try {\n    dispatch(customerSlice.getAverageAgesStart());\n    const response = await calls.callGetAverageAges();\n    dispatch(\n      customerSlice.getAverageAgesSuccess({\n        data: {\n          status: true,\n          data: response.data,\n        },\n      })\n    );\n  } catch (error) {\n    dispatch(customerSlice.getAverageAgesFail({ error }));\n    dispatch(customerSlice.cleanByKey({ key: 'getAverageAges' }));\n  }\n};\n","import React, { useEffect } from 'react';\nimport { Col, Row, Card, Typography } from 'antd';\nimport Clock from '@assets/images/icons/clock.svg';\nimport Bell from '@assets/images/icons/bell.svg';\nimport Calendar from '@assets/images/icons/calendar.svg';\nimport Smile from '@assets/images/icons/smile.svg';\nimport { useAppDispatch, useCustomerSelectorHook } from '@hooks';\nimport { getAverageAges as getAverage } from '@redux/actions/customer';\n\nconst { Title, Text } = Typography;\n\nexport const Cards: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { getAverageAges }: any = useCustomerSelectorHook();\n  const { response } = getAverageAges;\n\n  useEffect(() => {\n    dispatch(getAverage());\n  }, [dispatch]);\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col xs={24} md={12} lg={6}>\n        <Card className=\"card-dashboard\">\n          <Row align=\"middle\">\n            <div className=\"rounded bg-primary\">\n              <img src={Clock} alt=\"Clock\" />\n            </div>\n            <div className=\"ant-ml-2\">\n              <Title level={3}>{response?.data?.average || 0}</Title>\n              <Text>Average age of customers</Text>\n            </div>\n          </Row>\n        </Card>\n      </Col>\n      <Col xs={24} md={12} lg={6}>\n        <Card className=\"card-dashboard\">\n          <Row align=\"middle\">\n            <div className=\"rounded bg-secondary\">\n              <img src={Bell} alt=\"Bell\" />\n            </div>\n            <div className=\"ant-ml-2\">\n              <Title level={3}>06</Title>\n              <Text>Lorem Ipsum</Text>\n            </div>\n          </Row>\n        </Card>\n      </Col>\n      <Col xs={24} md={12} lg={6}>\n        <Card className=\"card-dashboard\">\n          <Row align=\"middle\">\n            <div className=\"rounded bg-primary-dark\">\n              <img src={Calendar} alt=\"Calendar\" />\n            </div>\n            <div className=\"ant-ml-2\">\n              <Title level={3}>02</Title>\n              <Text>Lorem Ipsum</Text>\n            </div>\n          </Row>\n        </Card>\n      </Col>\n      <Col xs={24} md={12} lg={6}>\n        <Card className=\"card-dashboard\">\n          <Row align=\"middle\">\n            <div className=\"rounded bg-contrast\">\n              <img src={Smile} alt=\"Smile\" />\n            </div>\n            <div className=\"ant-ml-2\">\n              <Title level={3}>01</Title>\n              <Text>Lorem Ipsum</Text>\n            </div>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n","const data = [\n  { day: 'a', value: 3 },\n  { day: 'b', value: 2 },\n  { day: 'c', value: 1 },\n  { day: 'd', value: 5 },\n  { day: 'e', value: 4.9 },\n  { day: 'f', value: 6 },\n  { day: 'g', value: 7 },\n];\n\nexport const config = {\n  data,\n  height: 200,\n  xField: 'day',\n  yField: 'value',\n  xAxis: {\n    label: {\n      autoHide: true,\n      autoRotate: false,\n    },\n  },\n  minColumnWidth: 20,\n  maxColumnWidth: 20,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Card } from 'antd';\nimport { Column } from '@ant-design/charts';\nimport { config } from './extra/charts';\n\nexport const Charts: React.FC = () => {\n  return (\n    <Card title=\"Lorem Ipsum\">\n      <Column {...config} />\n    </Card>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React from 'react';\nimport { Tag } from 'antd';\nimport moment from 'moment';\n\nexport const columns = [\n  {\n    title: 'Firstname',\n    dataIndex: 'firstname',\n    width: '40%',\n  },\n  {\n    title: 'Lastname',\n    dataIndex: 'lastname',\n    width: '40%',\n  },\n  {\n    title: 'Birthday',\n    dataIndex: '',\n    key: 'x',\n    width: '20%',\n    render: (_: any, record: any): any => {\n      return (\n        <Tag color=\"purple\">{moment(record.birthday).format('DD/MM/YYYY')}</Tag>\n      );\n    },\n  },\n];\n","import React, { useEffect } from 'react';\nimport { Card, Table } from 'antd';\nimport { useAppDispatch, useCustomerSelectorHook } from '@hooks';\nimport { getCustomers as getList } from '@redux/actions/customer';\nimport { columns } from './extra/columns';\n\nexport const Customers: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { getCustomers }: any = useCustomerSelectorHook();\n  const { loading, response } = getCustomers;\n\n  useEffect(() => {\n    dispatch(getList());\n  }, [dispatch]);\n\n  return (\n    <Card title=\"Customers list\">\n      <Table\n        columns={columns}\n        size=\"small\"\n        rowKey={(record: any) => record.id}\n        loading={loading}\n        dataSource={response?.results}\n      />\n    </Card>\n  );\n};\n","import React from 'react';\nimport { Col, Row } from 'antd';\nimport { Sidebar } from '@components';\nimport { Cards } from './cards';\nimport { Charts } from './charts';\nimport { Customers } from './customers';\n\nimport './index.less';\n\ninterface Props {}\n\nexport const DashboardPage: React.FC<Props> = () => {\n  return (\n    <Sidebar>\n      <Cards />\n      <Row gutter={[32, 32]} className=\"ant-mt-4\">\n        <Col xs={24} md={12} lg={12}>\n          <Charts />\n        </Col>\n        <Col xs={24} md={12} lg={12}>\n          <Charts />\n        </Col>\n      </Row>\n      <Row className=\"ant-mt-4\">\n        <Col span={24}>\n          <Customers />\n        </Col>\n      </Row>\n    </Sidebar>\n  );\n};\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { paths } from '@utils';\n\nimport { DashboardPage } from './DashboardPage';\n\nconst Routes: React.FC<any> = () => (\n  <Switch>\n    <Route exact path={paths.PATH_INIT} component={DashboardPage} />\n  </Switch>\n);\n\nexport default Routes;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { connectRouter } from 'connected-react-router';\nimport { history } from '@utils';\nimport customer from './slices/customer';\n\nconst rootReducer = combineReducers({\n  router: connectRouter(history),\n  customer,\n});\n\nexport { rootReducer };\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { rootReducer } from './reducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActionPaths: ['meta.arg', 'payload.date', 'payload.error'],\n      ignoredPaths: ['items.date'],\n    },\n  }),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport { store as configureStore };\n","/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport Routes from '@pages/routes';\nimport { configureStore } from '@redux/store';\nimport { history } from '@utils';\nimport '@styles/index.less';\n\nconst Root: React.FC = () => {\n  return (\n    <Provider store={configureStore}>\n      <ConnectedRouter history={history}>\n        <Routes />\n      </ConnectedRouter>\n    </Provider>\n  );\n};\n\nexport default Root;\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './Root';\nimport reportWebVitals from './reportWebVitals';\n\nconst MOUNT_NODE = document.getElementById('root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  MOUNT_NODE\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}